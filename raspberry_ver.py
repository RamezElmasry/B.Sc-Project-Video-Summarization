#Loading all the needed frameworks, libraries and packages.
import cv2
import imageio as iio
import sys
import shutil
import threading
sys.path.insert(0, '/home/pi/caffe/python')
import os
from os.path import isfile, join
from os import path
import caffe
import numpy as np
from sklearn.metrics.pairwise import euclidean_distances
import time
import PySimpleGUI as sg

'''
Loading caffe models! 
'''
#Caffe model formats:: prototxt: description for the structure of the neuron
#network/ caffemodel: the model after training and learning.

proto = "/home/pi/Project-pygui-rasp/Models/mobilenet_v2_deploy.prototxt"
model = "/home/pi/Project-pygui-rasp/Models/mobilenet_v2.caffemodel"
caffe.set_mode_cpu()
#Load the net, net: is the set of layers that the model is composed of.
net = caffe.Net(proto, model, caffe.TEST)
#Intialiaze the transformer for data pre-processing, it is required when there is a prototxt file.
#The conventional blob dimensions for batches of image data are number (batch size) N x no. of channels K x height H x width W.
#net.blobs: for input data and its propagation in the layers / net.blobs['data']: contains input data, an array of shape (1,3,244,244).
#The (:) is used to differentiate between the key and the value. 
#Specifically 'data' is the key and the tuple returned by 'net.blobs['data'].data.shape' (whose value for this particular example is 
#(1, 3, 244, 244) ) is the value. So basically the 'inputs' field of the transformer object is initialized with the key-value pair 
#'data', '(1, 3, 244, 244)'.
transformer = caffe.io.Transformer({'data':net.blobs['data'].data.shape})
#set_transpose(input data , new order we want the dimensions in)
#Swaps your image dimensions. Normally when an image library loads an image the dimensions of the loaded array are H x W x C 
#(where H is height, W is width and C is/are number of channels), but since caffe expects input in C x H x W, we transpose the data. 
#transpose('data, (2, 0, 1)) means transposing data such that 0th dimension is replaced by 2nd (height with channels), 1st by 
#0th (widht by height) and so on.
transformer.set_transpose('data',(2, 0, 1))
# Swap channels for the model as it accpets BGR format instead of RGB
transformer.set_channel_swap('data', (2, 1, 0))
# Makes the network perform its model calculations expecting images in the grayscale range 0-255 instead of the default 0-1.
transformer.set_raw_scale('data', 255)

print ("Caffe Model for Feature Extraction Loaded")
#########################################################################
proto1 = "/home/pi/Project-pygui-rasp/Models/deploy.prototxt"
model1 = "/home/pi/Project-pygui-rasp/Models/memnet.caffemodel"
net1 = caffe.Net(proto1, model1, caffe.TEST)

transformer1 = caffe.io.Transformer({'data':net1.blobs['data'].data.shape})
transformer1.set_transpose('data',(2, 0, 1))
transformer1.set_channel_swap('data', (2, 1, 0))
transformer1.set_raw_scale('data', 255)
#sets the data part of the blob in the fashion (batch size, channel value, height, width). The batch size is the no. of concurrent 
#images (or any data) that can be used for classification.
net1.blobs['data'].reshape(1, 3, 227, 227)

print ("Caffe Model for Memorability Prediction Loaded")
########################################################################           
def WebCam_SUMM(window,record_path,output_folder,active,key_output):
    print ("Inside WebCam function")
    # A check if the window is not opened anymore while the algorithm is running, it will close the window and the system.
    if active is False:
        sys.exit()
    #Loading the input video.    
    capture = cv2.VideoCapture(record_path)
    #getting total number of frames for the video.
    total_frames = int(capture.get(cv2.CAP_PROP_FRAME_COUNT))
    #getting FPS of the input video.
    fps = int(capture.get(cv2.CAP_PROP_FPS))
    print ("FPS = " , fps, "\t total frames = ",total_frames)
    #An array to save the memorability scores in.
    m_scores = []
    m_scores.append([])
    m_scores.append([])
    #Reading first frame in the video, then we get its the properties of the frame.
    ret, frame1 = capture.read()
    height,width,channels = frame1.shape
    size = (width,height)
    frame1 = cv2.resize(frame1,(352,288))
    counter = 1
    pb = 0
    #that line allows the gui event loop and the implemented threading not to interfere
    #with each other causing errors, which helped to make the gui interactive and summarizing more than one video
    #at the same time. 
    window.write_event_value('PROGRESS_TEXT2', 'progress')
    #Start algorithm main loop.
    while(True):
        ret2, frame2 = capture.read()
        if ret2 is True:
            frame2 = cv2.resize(frame2,(352,288))
            distt = segment(frame1,frame2)
            print ('Processing frames ... ')
            #parameter for the progress bar of the recording duration.
            pb+=(total_frames/5)
            window.write_event_value('PROGRESS2', 'loader')
            #different images means the segment of events ended.
            if distt >= 8000:
                m_scores = np.array(m_scores)
                [rows,cols] = m_scores.shape
                #get the keyframe from the shot, the one with the maximum memorability score
                if cols > 0:
                    max_index = m_scores[0].argmax()
                    keyframe_number = int(m_scores[1][max_index])
                    keyframe = capture.set(0,keyframe_number)
                    #print (keyframe_number , " \t########")
                    temp, keyframe = capture.read()
                    if temp:
                        pathh = output_folder+ str(keyframe_number) + '.jpg'
                        print ("############## \t 'Writing key frame at" , pathh, "'\t##############", "\a")
                        cv2.imwrite(pathh,keyframe)
                        
                print ("Different images = " , distt , "\t" , counter)
                #Empty the score array for the next shot.
                m_scores = []
                m_scores.append([])
                m_scores.append([])
                
            #same Images ==> compute image memorability and store it in the scores array.           
            else:
                m_value = mem_calculation((frame1))
                m_scores[0].append(m_value)
                m_scores[1].append(counter)
            counter = counter + (fps-14)
            frame1 = frame2
        #The video ended here, now we check what form of the output the user chose
        #act accordingly.   
        else:
            if key_output == 'CB23':
                convert_frames_to_video(record_path,output_folder,output_folder,fps)
                print('Done!')
                window.write_event_value('DONE2', 'program done')
                break
            if key_output == 'CB21':
                remove_video(record_path ,output_folder)
                print('Done!')
                window.write_event_value('DONE2', 'program done')
                break
            if key_output == 'CB22':
                convert_frames_to_video(record_path,output_folder,output_folder,fps)
                remove_frames(output_folder)
                print('Done!')
                window.write_event_value('DONE2', 'program done')
                break
    
    capture.release()
    window.write_event_value('-THREAD2-', '*** The thread says.... "I am finished" ***')   
#####################################################################################################################
def record(event,window,record_path,duration):
    #Recording function.
    #Load camera information.
    camera = iio.get_reader("<video0>")
    meta = camera.get_meta_data()
    #get number of frames
    num_frames = duration * int(meta["fps"])
    delay = 1/meta["fps"]
    dt = 0

    buffer = list()
    if event == sg.WIN_CLOSED:
        sys.exit()
    #recording loop    
    for frame_counter in range(num_frames):
        frame = camera.get_next_data()
        buffer.append(frame)
        dt +=1
        recording_bar(event,window,dt,num_frames)
        time.sleep(delay)

    camera.close()
    #Saving the recorded video in the given path, and naming the video uniquely.
    i = 0
    new_record_path = ''
    while True:
        new_record_path += record_path +'/' + 'webcam' + str(i) + '.avi'
        if path.exists(new_record_path):
            new_record_path = ''
            i+=1
        else:
            break
       
    iio.mimwrite(new_record_path, buffer, macro_block_size=8, fps=meta["fps"])
    return new_record_path
#######################################################################################
#An event update function for the recording bar gui.
def recording_bar(event,window,i, duration):
    event, values = window.read(timeout=1)
    if event == sg.WIN_CLOSED:
        sys.exit()
    else:  
        window['RECORDING'].update_bar(i, duration)
#######################################################################################
#Same steps happening as WebCam_SUMM function but getting input video and output video path.
def Recorded_Video_SUMM(window,input_video,output_folder,active,key_output):
    print ("Inside Recorded_Video function")
    if active is False:
        sys.exit()
        
    capture = cv2.VideoCapture(input_video)
    total_frames = int(capture.get(cv2.CAP_PROP_FRAME_COUNT))
    fps = int(capture.get(cv2.CAP_PROP_FPS))
    print ("FPS = " , fps, "\t total frames = ",total_frames)
    m_scores = []
    m_scores.append([])
    m_scores.append([])
    ret, frame1 = capture.read()
    height,width,channels = frame1.shape
    size = (width,height)
    frame1 = cv2.resize(frame1,(352,288))
    counter = 1
    #pb = 0
    window.write_event_value('PROGRESS_TEXT', 'progress')    
    while(True):
        ret2, frame2 = capture.read()
        if ret2 is True:
            frame2 = cv2.resize(frame2,(352,288))
            distt = segment(frame1,frame2)
            print ('Processing frames ... ')
            #pb+=(total_frames/5)
            window.write_event_value('PROGRESS', 'loader')
            if distt >= 8000:#different images 
                m_scores = np.array(m_scores)
                [rows,cols] = m_scores.shape
                
                if cols > 0:
                    max_index = m_scores[0].argmax()
                    keyframe_number = int(m_scores[1][max_index])
                    keyframe = capture.set(0,keyframe_number)
                    #print (keyframe_number , " \t########")
                    temp, keyframe = capture.read()
                    if temp:
                        pathh = output_folder+ str(keyframe_number) + '.jpg'
                        print ("############## \t 'Writing key frame at" , pathh, "'\t##############", "\a")
                        cv2.imwrite(pathh,keyframe)
                        
                print ("Different images = " , distt , "\t" , counter)  
                m_scores = []
                m_scores.append([])
                m_scores.append([])
                       
            else:#same images
                #print ("Similar images= " , distt , "\t" , counter)
                m_value = mem_calculation((frame1))
                #scores[index][0] = m_value
                m_scores[0].append(m_value)
                m_scores[1].append(counter)
            counter = counter + (fps-14)
            frame1 = frame2
        
        else:
            if key_output == 'CB3':
                convert_frames_to_video(input_video,output_folder,output_folder,fps)
                print('Done!')
                window.write_event_value('DONE', 'program done')
                break
            if key_output == 'CB1':
                remove_video(input_video ,output_folder)
                print('Done!')
                window.write_event_value('DONE', 'program done')
                break
            if key_output == 'CB2':
                convert_frames_to_video(input_video,output_folder,output_folder,fps)
                remove_frames(output_folder)
                print('Done!')
                window.write_event_value('DONE', 'program done')
                break
    
    capture.release()
    window.write_event_value('-THREAD-', '*** The thread says.... "I am finished" ***')
##############################################################################################################      
def segment(frame1,frame2):
    #print ("Inside segment function")
    
    #preporcessing frames by transforming them for the model.
    resized_image1 = caffe.io.resize_image(frame1,[224,224])
    resized_image2 = caffe.io.resize_image(frame2,[224,224])
    
    net.blobs['data'].reshape(1, 3, 224, 224)
    #Execute the transformation.
    net.blobs['data'].data[...] = transformer.preprocess('data', resized_image1)
    #Compute the output of the layer.
    net.forward()
    #Extracting features of the first frame from the output layer FC7.
    features1 = net.blobs['fc7'].data[0].reshape(1,1000)
    features1 = np.array(features1)
    net.blobs['data'].data[...] = transformer.preprocess('data', resized_image2)
    net.forward()
    #Extracting features of the second frame from the output layer FC7.
    features2 = net.blobs['fc7'].data[0].reshape(1,1000)
    features2 = np.array(features2)
    return euclidean_distances(features1,features2)

#####################################################################################################################    
def mem_calculation(frame1):
    #print ("Inside mem_calculation function")
    #preprocessing image for the model.
    resized_image = caffe.io.resize_image(frame1,[227,227])
    #Execute the transformation.
    net1.blobs['data'].data[...] = transformer1.preprocess('data', resized_image)
    #Getting the output score from the output layer FC8.
    value = net1.forward()
    value = value['fc8-euclidean']
    return value[0][0]
######################################################################################################################
#This is the video for converting frames to video incase the user chose so.
def convert_frames_to_video(input_video_path, key_frames_path, pathOut, fps):
    print('Inside convert')
    frame_array = []
    
    try:
        #The frames are numbered and sorted in the output directory, so we load them
        #in the frame array but sorted as well so that we can combine them into a video
        #in orderly manner.
        files_in_path = os.listdir(key_frames_path)
        files = [file for file in files_in_path if file.endswith(".jpg")]
        #for sorting the file names properly
        sorted_files = sorted(files,key=lambda x: int(os.path.splitext(x)[0]))
        
        for i in range(len(files)):
            filename=key_frames_path + sorted_files[i]
            #reading each files
            img = cv2.imread(filename)
            height, width, layers = img.shape
            size = (width,height)
            print(filename)
            #inserting the frames into an image array
            frame_array.append(img)
        #Deciding the output video format based on the input video format.
        video_name_format = os.path.split(input_video_path)[1]
        video_format = video_name_format.split(".")[-1]
        video_name = video_name_format.split(".")[-2]
        #print(video_name , video_format)
        out_video = ''
        out_video = out_video + video_name + '_summary' + '.' + video_format
        pathOut += out_video
        print(pathOut)
        if video_format == 'avi':
            out = cv2.VideoWriter(pathOut,cv2.VideoWriter_fourcc(*'DIVX'), fps, size)
        else:
            out = cv2.VideoWriter(pathOut,cv2.VideoWriter_fourcc(*'mp4v'), fps, size)

        for i in range(len(frame_array)):
            #writing to a image array
            out.write(frame_array[i])
        out.release()
        
    except:
        sg.popup_error('Provided path does not exist anymore, please refresh and provide paths again!', auto_close_duration = 20)
#####################################################################################################################
#This function is used to remove the frames incase the user chose to have the videos only in the output directory.
def remove_frames(output_path):
    print('Inside remove')
    #Load output path.
    files_in_path = os.listdir(output_path)
    #print('all files', files_in_path)
    #Get all the files with .jpg extension.
    filtered_files = [file for file in files_in_path if file.endswith(".jpg")]
    #print('frames files', filtered_files)
    #Loop on all the files, and remove them from the directory.
    for file in filtered_files:
        path_to_file = os.path.join(output_path, file)
        os.remove(path_to_file)   
#####################################################################################################################
#This function is used to remove the video incase the user chose to have frames only in the output directory.
def remove_video(input_video , output_folder):
    # Finding the output video in its output directory.
    video_name_format = os.path.split(input_video)[1]
    video_format = video_name_format.split(".")[-1]
    video_name = video_name_format.split(".")[-2]
    output_folder = output_folder + '/' + video_name
    new_video_name_format = ''
    new_video_name_format += '_summary' + '.' + video_format
    video = output_folder + new_video_name_format
    print(video)
    #remove the the video if found.
    if os.path.isfile(video):
        os.remove(video)         
#####################################################################################################################
#This is the function the automatically creates the output folder when the input video is provided.
def create_output_folder(input_video , output_folder):
    #Get information about the input video.
    video_name_format = os.path.split(input_video)[1]
    video_format = video_name_format.split(".")[-1]
    video_name = video_name_format.split(".")[-2]
    #Create the output directory.
    output_folder = output_folder + '/' + video_name + '/'
    video = output_folder + video_name_format
    #If the output directory already exists it will raise error, however with using shutil it will ignore the error and overwrite the existing directory.
    shutil.rmtree(output_folder, ignore_errors=True)
    #remove the video if something old is in that directory.
    if os.path.isfile(video):
        os.remove(video)
        
    os.makedirs(output_folder)
    return output_folder
#####################################################################################################################
#Function that links GUI front-end with the back-end algorithm.
def program_start():
    #Loading general theme.
    sg.theme('DarkPurple1')
    #Loading the images used in the form of 64-bit codec.
    gif = b''    
    back_button = b'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CSVxKr5nRVuG7ozHpW+eZ+rhQhH4U+CB9EZp2rRqtcwciA9Fc8HguXuHX9Hem2NoaxdjiwELoambVropke7jucwpkeF00SBxWK8N4Qt0ajPHORCNeTXYuCh0Sc3lrENbx4oWTa+vGPnGWS7dP2Zw7rPxNjakN0iX7I/UHJ8pEMejhWD//On53pXbelg31ImTkgqyoYG0WXm17B9f0zo2Nel5qFo2TxxX1rJ2kuFJxjVtOCnxPMVAZwurW3zO/+cIz/7Ls85UzZdA/HlcKjbv8i6z9VY3sQvAU8FsZd/UU9O93QPtbLymh2xGUyZeyklDxOO4BFFaxmCqdq6SBFgrPWKhhVTNJYdSICXtWc3mnhzdTnDqK6c4ee8zNqqYL4P4kyTn8QJbb0thGAV5NJyv7Lz06OV+z1Ns3rWCvu4WnJQEMn54TXCVQMQBIAFVMqmxZCq0NmBiW4ydOuMpBtozbOlqwV0ocuTTxzj1rTMVG9rPgfgwMHO1TzxeYApU390dAvcxoeXbBm9a6+/7vZ2s3r2CeQcXyxGzUbwGpaRACxHLJwQqtYYL1Dc+rXNE9Q1RyAjo8SWrcxpdDDn1vbM8+sXjTJ+dvQjir0F8Cag830cDP8dc7rMku1mt4O4E94ct3bmhbW8a4uW/uYWVW7upasFU1TITWsrWJZOueFUxNb/CJTAiiTJ5Jej2JV2ehIWAs4fHOHrv04z8ZDw0QfQAiI+BOBJHg7ueV8oX+S0KAtgC9n3Ab+R7832bXt3PjjdsYHDPSvIrc1gtqTioWkeY7Eo5GhrypSAr448yXDliZnSe0w+O8dR3n+PCsYIJK+HPQPxj8rXD3Ev8LUr6uJtkm+5acG8H3qh8vbFrXZvXv2sFA7tXsuplXXSuydPS7uNlNUKCjRxBKaI4XWH63DxjJ6c493iBiyenWJwozSfbaF8F8R1wl39egF8ApElDElidfK91ANwekIPKU51+3vMzOU/orEJKgYksYTmiWgxNUIrKzpqJeJtZHAbxIxBPglt8sQAvAchSLSFBdIIbBDYlfR/QRhwdq8AMiDHguXgTkzEQ5dgH7/qFJPg/rbtlQ3GC/YcAAAAQdEVYdEF1dGhvcgBtaWdodHltYW7DdcowAAAAWHRFWHRDb3B5cmlnaHQAQ0MwIFB1YmxpYyBEb21haW4gRGVkaWNhdGlvbiBodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvxuO9+QAAACF0RVh0Q3JlYXRpb24gVGltZQAyMDEyLTAzLTIzVDExOjI4OjU0Gqt8aAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMS0wNy0wM1QyMzo0NTo1NSswMjowMMLHxGYAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjEtMDctMDNUMTI6MTE6MzcrMDI6MDA7IZQSAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAFp0RVh0U291cmNlAGh0dHBzOi8vb3BlbmNsaXBhcnQub3JnL2RldGFpbC8xNjkwNDAvd2luZG93cy1tZWRpYS1wbGF5ZXItYmFjay1idXR0b24tYnktbWlnaHR5bWFuHa7ciQAAACZ0RVh0VGl0bGUAV2luZG93cyBNZWRpYSBQbGF5ZXIgQmFjayBCdXR0b26H9toSAAAAAElFTkSuQmCC'
    next_button = b'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'
    home_page = b'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'
    home_buttons = b''
    refresh = b'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'
    browser = b'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'
    taskbar_icon = b''
    start = b''
    FewFrames = b'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'
    frames = b'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'
# Layouts are the different pages of the GUI.
    layout1 = [[sg.Image(data = frames),sg.Text('Welcome to Video Summarizer Tool!', justification='center' , text_color = 'cyan',font = ('Courier',15)),sg.Image(data = FewFrames)]
               ,[sg.Text('Click on one of the following:',  pad = ((0,0),(100,0)), justification='center' , text_color = 'cyan',font = ('Courier',15))]
               ,[sg.Button('Webcam', key = 'WEBCAM', image_data=home_buttons, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15'),sg.Button('Recorded video', key = 'RECORDEDVIDEO', image_data=home_buttons, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')]]

    layout2 = [[sg.Button('', key = 'NEXTBUTTON', pad = ((0,10),(0,0)), image_data=next_button, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15'),sg.Button('', key = 'HOMEPAGE2', pad = ((0,300),(0,0)), image_data=home_page, tooltip = 'return to homepage', button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')
               ,sg.Button('Refresh', tooltip = 'Refresh page', key = 'REFRESH2' , size = (20,20), pad = ((350,0),(0,0)), image_data = refresh, image_subsample = 2, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')],
               [sg.Text("Time of record in seconds", key = 'TIMETEXT', justification='center', pad = ((0,60),(0,0)), text_color = 'cyan', font = ('Courier',15)),sg.Input(key='-TIMEINPUT-', pad = ((0,60),(0,0)),size=(35,0.7),background_color = 'MediumOrchid')],
               [sg.Text("Select the recorded video path", key = 'INPUTTEXT2', justification='center', pad = ((0,0),(0,0)), text_color = 'cyan', font = ('Courier',15)),sg.Input(key='-INPUT2-',size=(35,0.7),background_color = 'MediumOrchid'), sg.Button('', key = '-BROWSE VIDEO12-' , tooltip = 'Browse', image_data = browser, button_color = (sg.theme_background_color(), sg.theme_background_color()) , border_width=0, font='Any 15')],
               [sg.Button('Start Recording', key = '-RECORD-' ,  tooltip = 'Start the record' , image_data = home_buttons , button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')],
               [sg.Text('Recording Video...!', key = 'RECORDINGVIDEO', pad = ((30,0),(30,0)), text_color = 'cyan', font = ('Courier',15), visible = False) ],
               [sg.ProgressBar(1, key = 'RECORDING', orientation='h', pad = ((10,0),(0,0)),  size=(40, 20), bar_color = ('Red','MediumOrchid') , visible = False)]]
             
    layout22 = [[sg.Button('', key = 'BACKBUTTON', pad = ((0,10),(0,0)), image_data=back_button, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15'),sg.Button('', key = 'HOMEPAGE22', pad = ((0,300),(0,0)), tooltip = 'return to homepage', image_data=home_page, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')
               ,sg.Button('Refresh', tooltip = 'Refresh page', key = 'REFRESH22' , size = (20,20), pad = ((350,0),(0,0)), image_data = refresh, image_subsample = 2, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')],
               [sg.Text("Select the summarized video path:", key = 'OUTPUTTEXT2', justification='center' , pad = ((0,0),(0,0)), text_color = 'cyan', font = ('Courier',15)),sg.Input(key='-OUTPUT2-', size=(35,0.7),background_color = 'MediumOrchid'), sg.Button('', key = '-BROWSE VIDEO22-' , tooltip = 'Browse', image_data = browser, button_color = (sg.theme_background_color(), sg.theme_background_color()) , border_width=0, font='Any 15')],
               [sg.Text('Select your Output form!',pad = ((20,0),(40,0)), justification='center', text_color = 'cyan', font = ('Courier',15))],
               [sg.Checkbox('Frames only', key = 'CB21', text_color = 'cyan',font = ('Courier',12), enable_events = True),sg.Checkbox('Video only', key = 'CB22', text_color = 'cyan',font = ('Courier',12) , enable_events = True),sg.Checkbox('Both', key = 'CB23', text_color = 'cyan',font = ('Courier',12), enable_events = True)],
               [sg.Button('', key = '-START-' ,  tooltip = 'Start Processing' , image_data = start , button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')],
               [sg.Text('processing....!',key = 'PROGRESS_TEXT2', pad = ((30,0),(30,0)), text_color = 'cyan', font = ('Courier',15), visible = False)],
               [sg.Image(data=gif, enable_events=True, visible = False, key='-IMAGE22-', right_click_menu=['UNUSED', ['Exit']])]]

    layout3 = [[sg.Button('', key = 'HOMEPAGE3', pad = ((0,350),(0,0)), tooltip = 'return to homepage', image_data=home_page, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15'),
               sg.Button('Refresh', tooltip = 'Refresh page', key = 'REFRESH' , size = (20,20), pad = ((350,0),(0,0)), image_data = refresh, image_subsample = 2, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')],
              [sg.Text("Select the input video path", justification='center', pad = ((0,60),(0,0)), text_color = 'cyan', font = ('Courier',15)),sg.Input(key='-INPUT-',size=(35,0.7),background_color = 'MediumOrchid'), sg.Button('', key = '-BROWSE VIDEO1-' , tooltip = 'Browse', image_data = browser, button_color = (sg.theme_background_color(), sg.theme_background_color()) , border_width=0, font='Any 15')],
              [sg.Text("Select the summarized video path", justification='center', pad = ((0,0),(0,0)), text_color = 'cyan', font = ('Courier',15)),sg.Input(key='-OUTPUT-',size=(35,0.7),background_color = 'MediumOrchid'), sg.Button('', key = '-BROWSE VIDEO2-' , tooltip = 'Browse', image_data = browser, button_color = (sg.theme_background_color(), sg.theme_background_color()) , border_width=0, font='Any 15')],
              [sg.Text('Select your Output form!',pad = ((20,0),(20,0)), justification='center', text_color = 'cyan', font = ('Courier',15))],
              [sg.Checkbox('Frames only', key = 'CB1', text_color = 'cyan',font = ('Courier',12), enable_events = True),sg.Checkbox('Video only', key = 'CB2', text_color = 'cyan',font = ('Courier',12) , enable_events = True),sg.Checkbox('Both', key = 'CB3', text_color = 'cyan',font = ('Courier',12), enable_events = True)],
              [sg.Button('', key = '-SUBMIT FILE-' ,  tooltip = 'Start Processing' , image_data = start , button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, font='Any 15')],
              [sg.Text('Processing...!', key = 'PROGRESS_TEXT', pad = ((30,0),(30,0)), text_color = 'cyan', font = ('Courier',15), visible = False)],
              [sg.Image(data=gif, enable_events=True, visible = False, key='-IMAGE-', right_click_menu=['UNUSED', ['Exit']])]]

#Main Layout that include the sub-layouts.
    layout = [[sg.Column(layout1, element_justification = 'center', key='-COL1-'),
               sg.Column(layout2, element_justification = 'center', visible=False, key='-COL2-'),
               sg.Column(layout22, element_justification = 'center', visible=False, key='-COL22-'),
               sg.Column(layout3, element_justification = 'center', visible=False, key='-COL3-')]]
    #Loading the GUI window.
    window = sg.Window('Video Summarizer Tool', layout ,  icon = taskbar_icon,  resizable = False , element_justification='center' , size = (888,500))
    #GUI Event Loop             
    while True:
        event, values = window.read(timeout=10)
        #print(event, values)
        #Several event checks to see which layout should be loaded and which should disappear when a button is clicked.
        if event == sg.WIN_CLOSED:
            sys.exit()
        if event == 'HOMEPAGE2':
            window['-COL2-'].update(visible=False)
            window['-COL1-'].update(visible=True)
            
        if event == 'HOMEPAGE22':
            window['-COL22-'].update(visible=False)
            window['-COL1-'].update(visible=True)
            
        if event == 'BACKBUTTON':
            window['-COL22-'].update(visible=False)
            window['-COL2-'].update(visible=True)
            
        if event == 'NEXTBUTTON':
            window['-COL2-'].update(visible=False)
            window['-COL22-'].update(visible=True)
            
        if event == 'HOMEPAGE3':
            window['-COL3-'].update(visible=False)
            window['-COL1-'].update(visible=True)
            
        if event == 'WEBCAM':
            window['-COL1-'].update(visible=False)
            window['-COL2-'].update(visible=True)
            
        if event == 'RECORDEDVIDEO':
            window['-COL1-'].update(visible=False)
            window['-COL3-'].update(visible=True)
        #.............................................. Recorded Video layout events..............................................#
            
        #Validation checks on the provided inputs.
        if event == '-BROWSE VIDEO1-' and values['-INPUT-'] == '':
            input_video = sg.popup_get_file('',title = 'Choose input Video',  initial_folder ='/home/pi', icon = taskbar_icon, file_types = (('AVI Video File', '*.avi*'),("MP4 Video File","*.mp4"),("FLV Video File", "*.flv"),("All Files","*.*"),))
            if not path.exists(str(input_video)):
                sg.popup_quick_message('Please provide a valid path!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
            else:
                window['-INPUT-'].update(input_video)
            
        if event == '-BROWSE VIDEO2-' and values['-OUTPUT-'] == '' and values['-INPUT-'] != '':
            output_folder = sg.popup_get_folder('',title = 'Choose output path', initial_folder ='/home/pi', icon = taskbar_icon)
            if not path.exists(str(output_folder)):
                sg.popup_quick_message('Please provide valid paths!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
            else:
                if output_folder != None and len(output_folder) != 0:
                    new_output_folder = create_output_folder(input_video,output_folder)
                    window['-OUTPUT-'].update(new_output_folder)
                else:
                    sg.popup_quick_message('Invalid input path!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
                    
                        
        if event == '-BROWSE VIDEO2-' and values['-INPUT-'] == '':
            sg.popup_quick_message('Choose the Input path first!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
            
        if event == '-SUBMIT FILE-' and (not path.exists(values['-INPUT-']) or not path.exists(values['-OUTPUT-'])):
            sg.popup_quick_message('Please provide valid paths!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
        #Starting the algorithm in a thread, which in turn helps the gui to be interactive while the algorithm is running.
        #The several checks are for which check box is chosen.
        if event == '-SUBMIT FILE-' and values['-INPUT-'] != '' and values['-OUTPUT-'] != '' and path.exists(values['-INPUT-']) and path.exists(values['-OUTPUT-']) and values['CB1'] == True:
            thread = threading.Thread(target=Recorded_Video_SUMM, args=(window, input_video , new_output_folder , True , 'CB1'), daemon=True)
            thread.start()           
            
        if event == '-SUBMIT FILE-' and values['-INPUT-'] != '' and values['-OUTPUT-'] != '' and path.exists(values['-INPUT-']) and path.exists(values['-OUTPUT-']) and values['CB2'] == True:
            thread = threading.Thread(target=Recorded_Video_SUMM, args=(window, input_video , new_output_folder , True , 'CB2'), daemon=True)
            thread.start()
            
        if event == '-SUBMIT FILE-' and values['-INPUT-'] != '' and values['-OUTPUT-'] != '' and path.exists(values['-INPUT-']) and path.exists(values['-OUTPUT-']) and values['CB3'] == True:
            thread = threading.Thread(target=Recorded_Video_SUMM, args=(window, input_video , new_output_folder , True , 'CB3'), daemon=True)
            thread.start()
            
        if event == '-SUBMIT FILE-' and values['CB1'] == False and values['CB2'] == False and values['CB3'] == False :
            sg.popup_quick_message('Please check one of the boxes!', text_color = 'cyan', font = ('Courier',15) ,location = (470,300))
            
        #checking what the user chose for the output form.    
        if values['CB1'] == True and values['CB2'] == False and values['CB3'] == False:
            window['CB2'].update(disabled = True)
            window['CB3'].update(disabled = True)
            
        if values['CB2'] == True and values['CB1'] == False and values['CB3'] == False:
            window['CB1'].update(disabled = True)
            window['CB3'].update(disabled = True)
            
        if values['CB3'] == True and values['CB1'] == False and values['CB2'] == False:
            window['CB1'].update(disabled = True)
            window['CB2'].update(disabled = True)
            
        if values['CB1'] == False and values['CB2'] == False and values['CB3'] == False:
            window['CB1'].update(disabled = False)
            window['CB2'].update(disabled = False)
            window['CB3'].update(disabled = False)
            
        #Refresh button functionality.    
        if event == 'REFRESH':
            window['-OUTPUT-'].update('')
            window['-INPUT-'].update('')
            window['CB1'].update(value = False, disabled = False)
            window['CB2'].update(value = False, disabled = False)
            window['CB3'].update(value = False, disabled = False)
            
        #Processing icon and text.    
        if event == 'PROGRESS':
            window['PROGRESS_TEXT'].update(visible = True)
            window['-IMAGE-'].update(visible = True)
            window['-IMAGE-'].update_animation(gif,  time_between_frames=25)
        #Message will appear when the algorithm is done. 
        if event == 'DONE':
            window['PROGRESS_TEXT'].update(visible = False)
            window['-IMAGE-'].update(visible = False)
            sg.popup_quick_message('A video is summarized, please check your output folders!', text_color = 'cyan', font = ('Courier',15) ,location = (300,400), auto_close_duration = 3)   
        #An indicator that the thread finished its job.    
        if event == '-THREAD-':            
            thread.join(timeout=0)
            print('Thread finished')
            
     #.............................................. webcam Video layout events..................................................#
        #Validation checks on the provided inputs.
        if event == '-BROWSE VIDEO12-' and values['-INPUT2-'] == '':
            input_path = sg.popup_get_folder('',title = 'Choose input path', initial_folder ='/home/pi', icon = taskbar_icon)
            if not path.exists(str(input_path)):
                sg.popup_quick_message('Please provide a valid path!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
            else:
                window['-INPUT2-'].update(input_path)
                     
        if event == '-RECORD-' and (values['-TIMEINPUT-'] != '0' or values['-TIMEINPUT-'] != '') and values['-INPUT2-'] == '' :
            try:
                int(values['-TIMEINPUT-'])
            except:
                sg.popup_quick_message('Invalid input format!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150)) 
            
        #Recording page validation checks, and if the inputs are valid, it will start recording.    
        if event == '-RECORD-' and (values['-TIMEINPUT-'] != '0' or values['-TIMEINPUT-'] != '') and path.exists(values['-INPUT2-']):
            try:
                int(values['-TIMEINPUT-'])
                window['RECORDINGVIDEO'].update(visible = True)
                window['RECORDING'].update(0,visible = True)
                record_path = record(event, window, values['-INPUT2-'] , int(values['-TIMEINPUT-']))        
                sg.popup_quick_message('The video is recorded!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
                window['-COL2-'].update(visible=False)
                window['-COL22-'].update(visible=True)                    
            except:
                sg.popup_quick_message('Invalid input, please provide a valid path and time format!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150)) 
        #Validation checks on the provided inputs.    
        if event == '-BROWSE VIDEO22-' and values['-OUTPUT2-'] == '' :
            try:
                output_folder2 = sg.popup_get_folder('',title = 'Choose output path', initial_folder ='/home/pi', icon = taskbar_icon)
                if not path.exists(str(output_folder2)):
                    sg.popup_quick_message('Please provide a valid path!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
                else:
                    if output_folder2 != None and len(output_folder2) != 0:
                        new_output_folder2 = create_output_folder(record_path,output_folder2)
                        window['-OUTPUT2-'].update(new_output_folder2)
            except:
                sg.popup_quick_message('Record a video first!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))

        
        if event == '-START-' and values['-OUTPUT2-'] == '' :
            sg.popup_quick_message('Please select output path!', text_color = 'cyan', font = ('Courier',15) ,location = (470,150))
        
        if event == '-START-' and values['CB21'] == False and values['CB22'] == False and values['CB23'] == False:
            sg.popup_quick_message('Please check one of the boxes!', text_color = 'cyan', font = ('Courier',15) ,location = (470,300))
        
        if event == '-START-' and not path.exists(values['-OUTPUT2-']):
            sg.popup_quick_message('Please provide a valid path!', text_color = 'cyan', font = ('Courier',15) ,location = (470,200))
            
        #Starting the algorithm in a thread, which in turn helps the gui to be interactive while the algorithm is running.
        #The several checks are for which check box is chosen.    
        if event == '-START-' and path.exists(values['-OUTPUT2-']) and values['CB21'] == True :
            thread2 = threading.Thread(target=WebCam_SUMM, args=(window, record_path, values['-OUTPUT2-'], True , 'CB21'), daemon=True)
            thread2.start()
            
        if event == '-START-' and path.exists(values['-OUTPUT2-']) and values['CB23'] == True:
            thread2 = threading.Thread(target=WebCam_SUMM, args=(window, record_path, values['-OUTPUT2-'], True , 'CB23'), daemon=True)
            thread2.start()
            
        if event == '-START-' and path.exists(values['-OUTPUT2-']) and values['CB22'] == True:
            thread2 = threading.Thread(target=WebCam_SUMM, args=(window, record_path, values['-OUTPUT2-'], True , 'CB22'), daemon=True)
            thread2.start()
        #checking what the user chose for the output form.  
        if event == 'PROGRESS2':
            window['PROGRESS_TEXT2'].update(visible = True)
            window['-IMAGE22-'].update(visible = True)
            window['-IMAGE22-'].update_animation(gif,  time_between_frames=25)
        #Message will appear when the algorithm is done.  
        if event == 'DONE2':
            window['PROGRESS_TEXT2'].update(visible = False)
            window['-IMAGE22-'].update(visible = False)
            sg.popup_quick_message('A recorded video is summarized, please check your output folders!', text_color = 'cyan', font = ('Courier',15) ,location = (300,400), auto_close_duration = 3)
        #An indicator that the thread finished its job.    
        if event == '-THREAD2-':            
            thread2.join(timeout=0)
            print('Thread2 finished')
        #checking what the user chose for the output form in layout22.     
        if values['CB21'] == True and values['CB22'] == False and values['CB23'] == False:
            window['CB22'].update(disabled = True)
            window['CB23'].update(disabled = True)
            
        if values['CB22'] == True and values['CB21'] == False and values['CB23'] == False:
            window['CB21'].update(disabled = True)
            window['CB23'].update(disabled = True)
            
        if values['CB23'] == True and values['CB21'] == False and values['CB22'] == False:
            window['CB21'].update(disabled = True)
            window['CB22'].update(disabled = True)
            
        if values['CB21'] == False and values['CB22'] == False and values['CB23'] == False:
            window['CB21'].update(disabled = False)
            window['CB22'].update(disabled = False)
            window['CB23'].update(disabled = False)
        #Refresh button functionality in layout2.    
        if event == 'REFRESH2':
            window['-TIMEINPUT-'].update('')
            window['-INPUT2-'].update('')
            window['RECORDINGVIDEO'].update(visible = False)
            window['RECORDING'].update(0,visible = False) 
        #Refresh button functionality in layout22.    
        if event == 'REFRESH22':
            window['-OUTPUT2-'].update('')
            window['CB21'].update(value = False, disabled = False)
            window['CB22'].update(value = False, disabled = False)
            window['CB23'].update(value = False, disabled = False)
                       
    window.close()

###################################################################################################
###################################################################################################

if __name__ == '__main__':
    program_start()   
